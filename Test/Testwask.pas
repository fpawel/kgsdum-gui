unit Testwask;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
    TestFramework, wask;

type
    // Test methods for class CalcCRC16

    TestCalcCRC16 = class(TTestCase)
    public
        procedure SetUp; override;
        procedure TearDown; override;
    published
        procedure TestCalcCRC16;
        procedure TestBCD6;
        procedure TestRequestBytes;

    end;

implementation



procedure TestCalcCRC16.SetUp;
begin

end;

procedure TestCalcCRC16.TearDown;
begin
    
end;

procedure TestCalcCRC16.TestCalcCRC16;
var
    ReturnValue: Word;
    index_to: Integer;
    index_from: Integer;
begin
    // TODO: Setup method call parameters
    ReturnValue := WaskCalc.CRC16([1, 2, 3, 4]);
    // TODO: Validate method results
    CheckEqualsBin(ReturnValue, $F2FC);
end;

procedure TestCalcCRC16.TestBCD6;
var b:TArray<byte>;
begin
    setlength(b,4);
    WaskCalc.putBCD6(b, -156.589, 0);
    CheckTrue(bytes_arrays_equal(b, [$03, $15, $65, $89]));


end;

procedure TestCalcCRC16.TestRequestBytes;
var r: WaskRequest;
    v:double;
begin
    r.DeviceAddr := 100;
    r.ValueAddr := 100;
    r.Direction := WaskWrite;
    r.Value := -156.589;
    CheckTrue(bytes_arrays_equal(r.Bytes, [$64, $A1, $64, $03, $15, $65, $09, $9D, $14]));

    CheckTrue(r.ParseResponse(r.Bytes, v) = '');
    CheckTrue(v = r.Value);


end;

initialization

// Register any test cases with the test runner
RegisterTest(TestCalcCRC16.Suite);

end.
